generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Airplane {
  modelNumber Int      @id @default(autoincrement())
  modelName   String
  capacity    Int      @default(0)
  Flight      Flight[]
  Seat        Seats[]
}

model City {
  id      Int       @id @default(autoincrement())
  name    String
  state   String
  country String
  airport Airport[]

  @@unique([name, state, country])
}

model Airport {
  id               Int      @id @default(autoincrement())
  code             String   @unique
  name             String   @unique
  address          String?
  cityId           Int
  city             City     @relation(fields: [cityId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  departureFlights Flight[] @relation("DepartureAirport")
  arrivalFlights   Flight[] @relation("ArrivalAirport")
}

model Flight {
  id                   Int      @id @default(autoincrement())
  flightNumber         String   @unique
  departureAirportCode String
  arrivalAirportCode   String
  boardingGate         String
  departureTime        DateTime
  arrivalTime          DateTime
  totalSeats           Int
  price                Int
  airplaneModelNumber  Int
  airplane             Airplane @relation(fields: [airplaneModelNumber], references: [modelNumber], onDelete: Cascade, onUpdate: Cascade)
  departureAirport     Airport  @relation("DepartureAirport", fields: [departureAirportCode], references: [code], onUpdate: Cascade, onDelete: Cascade)
  arrivalAirport       Airport  @relation("ArrivalAirport", fields: [arrivalAirportCode], references: [code], onUpdate: Cascade, onDelete: Cascade)
}

enum seatType {
  business
  economy
  first_class
  premium_economy
}

model Seats {
  id                  Int      @id @default(autoincrement())
  row                 Int
  coloumn             String
  seatType            seatType @default(economy)
  airplaneModelNumber Int
  Airplane            Airplane @relation(fields: [airplaneModelNumber], references: [modelNumber])
}
